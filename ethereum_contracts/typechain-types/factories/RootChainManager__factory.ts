/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RootChainManager,
  RootChainManagerInterface,
} from "../RootChainManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETHER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAPPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE_UPDATER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "childToRootToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "cleanMapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
    ],
    name: "depositEtherFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "hashChild",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "mapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previousMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "registerVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "remapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rootToChildToken",
    outputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "subindex",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDepositFee",
        type: "uint256",
      },
    ],
    name: "setDepositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStateSender",
        type: "address",
      },
    ],
    name: "setStateSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasurer",
        type: "address",
      },
    ],
    name: "setTreasurer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newWithdrawFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasurer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "typeToVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "ccdIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "ccdSubIndex",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "string",
            name: "ccdTxHash",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "ccdEventIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "tokenId",
            type: "uint64",
          },
        ],
        internalType: "struct IRootChainManager.WithdrawParams",
        name: "withdrawParam",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612558806100206000396000f3fe6080604052600436106102295760003560e01c80637cb6475911610123578063cf1d21c0116100ab578063ea60c7c41161006f578063ea60c7c414610706578063f0471dc014610767578063f57663d114610787578063fda49eb41461079a578063ff57e1d8146107ba57600080fd5b8063cf1d21c01461065d578063d547741f14610685578063e2c49de1146106a5578063e43009a6146106c3578063e941fa78146106f057600080fd5b8063ab14248e116100f2578063ab14248e14610583578063b6ac642a146105d1578063c4d66de8146105f1578063c85d263114610611578063caf3791e1461064757600080fd5b80637cb647591461051b57806391d148541461053b578063963811591461055b578063a217fddf1461056e57600080fd5b806349590657116101b1578063607f2d4211610175578063607f2d4214610475578063671d6429146104a557806367a52793146104c55780636cb136b0146104db5780636f3cde1f146104fb57600080fd5b806349590657146103df57806352174ca9146103f4578063568b80b514610414578063594986a4146104485780635c975abb1461045b57600080fd5b80632eb4a7ab116101f85780632eb4a7ab146103355780632f2ff15d1461034b57806336568abe1461036b5780633e9e3e731461038b578063490ae210146103bf57600080fd5b806301ffc9a71461028257806316c38b3c146102b7578063248a9ca3146102d7578063286f8c741461031557600080fd5b3661027d5760405162461bcd60e51b815260206004820181905260248201527f45544820646972656374207472616e73666572206172652064697361626c656460448201526064015b60405180910390fd5b005b600080fd5b34801561028e57600080fd5b506102a261029d366004611e8a565b6107da565b60405190151581526020015b60405180910390f35b3480156102c357600080fd5b5061027b6102d2366004611eb4565b610811565b3480156102e357600080fd5b506103076102f2366004611ed6565b6000908152600d602052604090206001015490565b6040519081526020016102ae565b34801561032157600080fd5b5061027b610330366004611f07565b610831565b34801561034157600080fd5b5061030760075481565b34801561035757600080fd5b5061027b610366366004611f07565b6108cb565b34801561037757600080fd5b5061027b610386366004611f07565b6108f6565b34801561039757600080fd5b506103077f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a77381565b3480156103cb57600080fd5b5061027b6103da366004611ed6565b610974565b3480156103eb57600080fd5b50600754610307565b34801561040057600080fd5b5061027b61040f366004611f53565b610986565b34801561042057600080fd5b506103077f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777781565b61027b610456366004611f98565b610a96565b34801561046757600080fd5b50600c546102a29060ff1681565b34801561048157600080fd5b506102a2610490366004611ed6565b60056020526000908152604090205460ff1681565b3480156104b157600080fd5b5061027b6104c0366004612036565b610be0565b3480156104d157600080fd5b50610307600a5481565b3480156104e757600080fd5b5061027b6104f6366004612036565b610c76565b34801561050757600080fd5b5061027b610516366004612053565b610d0a565b34801561052757600080fd5b5061027b610536366004611ed6565b610de9565b34801561054757600080fd5b506102a2610556366004611f07565b610e78565b61027b6105693660046120a0565b610ea3565b34801561057a57600080fd5b50610307600081565b34801561058f57600080fd5b506105b961059e366004611ed6565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102ae565b3480156105dd57600080fd5b5061027b6105ec366004611ed6565b61132c565b3480156105fd57600080fd5b5061027b61060c366004612036565b61133e565b34801561061d57600080fd5b506105b961062c366004611ed6565b6001602052600090815260409020546001600160a01b031681565b34801561065357600080fd5b5061030760085481565b34801561066957600080fd5b506105b973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561069157600080fd5b5061027b6106a0366004611f07565b611451565b3480156106b157600080fd5b506006546001600160a01b03166105b9565b3480156106cf57600080fd5b506103076106de366004612036565b60046020526000908152604090205481565b3480156106fc57600080fd5b50610307600b5481565b34801561071257600080fd5b50610747610721366004612036565b6002602052600090815260409020546001600160401b0380821691600160401b90041682565b604080516001600160401b039384168152929091166020830152016102ae565b34801561077357600080fd5b5061027b610782366004612053565b611477565b61027b610795366004612141565b6115ee565b3480156107a657600080fd5b506009546105b9906001600160a01b031681565b3480156107c657600080fd5b506103076107d536600461216d565b6116a6565b60006001600160e01b03198216637965db0b60e01b148061080b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600061081d81336116eb565b50600c805460ff1916911515919091179055565b600061083d81336116eb565b6000838152600160205260409081902080546001600160a01b0319166001600160a01b038581169182179092556006549251633001397d60e01b8152600481018790526024810191909152911690633001397d90604401600060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b50505050505050565b6000828152600d60205260409020600101546108e781336116eb565b6108f1838361174f565b505050565b6001600160a01b03811633146109665760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610272565b61097082826117d5565b5050565b600061098081336116eb565b50600a55565b600061099281336116eb565b600061099e84846116a6565b604080518082018252600080825260208083018281526001600160a01b038b8116808552600284528685209551865493516001600160401b03908116600160401b026001600160801b031990951691811691909117939093179095558684526003835285842080546001600160a01b03191690558484526004928390528584208490556006549551634b898fdf60e11b815292830194909452898116602483015288166044820152606481019190915292935016906397131fbe906084015b600060405180830381600087803b158015610a7757600080fd5b505af1158015610a8b573d6000803e3d6000fd5b505050505050505050565b600c5460ff1615610ab95760405162461bcd60e51b8152600401610272906121a0565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03841601610b325760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20494e56414c49445f524f4f545f5460448201526327a5a2a760e11b6064820152608401610272565b600a54341015610b845760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206465706f736974206665656044820152606401610272565b600a5415610b9757610b97600a5461183c565b610bd985858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061187692505050565b5050505050565b6000610bec81336116eb565b6001600160a01b038216610c535760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a2076616c69642061646472657373206044820152671c995c5d5a5c995960c21b6064820152608401610272565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c8281336116eb565b6001600160a01b038216610ce75760405162461bcd60e51b815260206004820152602660248201527f526f6f74436861696e4d616e616765723a204241445f4e45575f53544154455f60448201526529a2a72222a960d11b6064820152608401610272565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c607777610d3581336116eb565b6000610d4185856116a6565b6001600160a01b0387166000908152600260205260409020549091506001600160401b0316158015610d8857506000818152600360205260409020546001600160a01b0316155b610dd45760405162461bcd60e51b815260206004820181905260248201527f526f6f74436861696e4d616e616765723a20414c52454144595f4d41505045446044820152606401610272565b610de18682878787611a6c565b505050505050565b7f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a773610e1481336116eb565b600780546008558290556006546040516338835bcb60e01b8152600481018490526001600160a01b03909116906338835bcb90602401600060405180830381600087803b158015610e6457600080fd5b505af1158015610de1573d6000803e3d6000fd5b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600c5460ff1615610ec65760405162461bcd60e51b8152600401610272906121a0565b600b54341015610f225760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f75676820657468657220666f722077697468647261772066656044820152606560f81b6064820152608401610272565b600b5415610f3557610f35600b5461183c565b6000610f4460208501856121e2565b610f5460408601602087016121e2565b6040860135610f696080880160608901612036565b610f7660808901896121fd565b610f8660c08b0160a08c016121e2565b610f9660e08c0160c08d016121e2565b604051602001610fad989796959493929190612273565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff16156110365760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a20455849545f414c52454144595f506044820152671493d0d154d4d15160c21b6064820152608401610272565b611077838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506007549150849050611ba8565b806110be57506110be838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506008549150849050611ba8565b61111b5760405162461bcd60e51b815260206004820152602860248201527f5472616e73616374696f6e2070726f6f66206973206e6f74206c697665206f6e604482015267081b585a5b9b995d60c21b6064820152608401610272565b60008181526005602090815260408220805460ff1916600117905561115690611146908701876121e2565b6107d560408801602089016121e2565b6000818152600360205260409020549091506001600160a01b03168061118e5760405162461bcd60e51b8152600401610272906122d0565b6001600160a01b03808216600090815260046020908152604080832054835260019091529020541680638468b27a6111cc60808a0160608b01612036565b846111dd60e08c0160c08d016121e2565b604080516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526001600160401b031660448301528a01356064820152608401600060405180830381600087803b15801561123e57600080fd5b505af1158015611252573d6000803e3d6000fd5b50506006546001600160a01b03169150636d4e5516905061127660208a018a6121e2565b61128660408b0160208c016121e2565b60408b013561129b60808d0160608e01612036565b6112a860808e018e6121fd565b8e60a00160208101906112bb91906121e2565b8f60c00160208101906112ce91906121e2565b6040518963ffffffff1660e01b81526004016112f1989796959493929190612273565b600060405180830381600087803b15801561130b57600080fd5b505af115801561131f573d6000803e3d6000fd5b5050505050505050505050565b600061133881336116eb565b50600b55565b600054610100900460ff166113595760005460ff161561135d565b303b155b6113c05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610272565b600054610100900460ff161580156113e2576000805461ffff19166101011790555b6113ed600083611bbe565b6114177f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777783611bbe565b600980546001600160a01b0319166001600160a01b038416179055600c805460ff191690558015610970576000805461ff00191690555050565b6000828152600d602052604090206001015461146d81336116eb565b6108f183836117d5565b600061148381336116eb565b600061148f85856116a6565b6001600160a01b03871660009081526002602090815260408083208151808301909252546001600160401b03808216808452600160401b90920416928201839052939450926114dd916116a6565b6000848152600360209081526040808320546001600160a01b0316808452600290925290912054919250906001600160401b031615158061154557506001600160a01b038116600090815260026020526040902054600160401b90046001600160401b031615155b156115a757604080518082018252600080825260208083018281526001600160a01b0386168352600282528483209351845491516001600160401b03908116600160401b026001600160801b0319909316911617179092556004909152908120555b6000828152600360205260409020546001600160a01b0316156115e157600082815260036020526040902080546001600160a01b03191690555b610a8b89858a8a8a611a6c565b600c5460ff16156116115760405162461bcd60e51b8152600401610272906121a0565b600a54341161167b5760405162461bcd60e51b815260206004820152603060248201527f4e6f7420656e6f75676820657468657220746f206465706f736974206166746560448201526f7220706179696e67207468652066656560801b6064820152608401610272565b600a541561168e5761168e600a5461183c565b6109708282600a54346116a19190612328565b611bc8565b6040516001600160c01b031960c084811b8216602084015283901b16602882015260009060300160405160208183030381529060405280519060200120905092915050565b6116f58282610e78565b6109705761170d816001600160a01b03166014611c74565b611718836020611c74565b60405160200161172992919061235f565b60408051601f198184030181529082905262461bcd60e51b825261027291600401612400565b6117598282610e78565b610970576000828152600d602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117913390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117df8282610e78565b15610970576000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6009546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610970573d6000803e3d6000fd5b6001600160a01b0382166000908152600460209081526040808320546002909252909120546001600160401b0316158015906118b157508015155b6118cd5760405162461bcd60e51b8152600401610272906122d0565b6000818152600160205260409020546001600160a01b03168061193e5760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20494e56414c49445f544f4b454e5f6044820152635459504560e01b6064820152608401610272565b6001600160a01b0386166119945760405162461bcd60e51b815260206004820152601e60248201527f526f6f74436861696e4d616e616765723a20494e56414c49445f5553455200006044820152606401610272565b60405163c6aafd7560e01b81526001600160a01b0382169063c6aafd75906119c89033908a908a908a908a90600401612413565b600060405180830381600087803b1580156119e257600080fd5b505af11580156119f6573d6000803e3d6000fd5b5050600654604051631fe194a560e11b81526001600160a01b039091169250633fc3294a9150611a329089908990899087908a90600401612459565b600060405180830381600087803b158015611a4c57600080fd5b505af1158015611a60573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260409020546001600160a01b0316611ae35760405162461bcd60e51b815260206004820152602a60248201527f526f6f74436861696e4d616e616765723a20544f4b454e5f545950455f4e4f5460448201526917d4d5541413d495115160b21b6064820152608401610272565b6040805180820182526001600160401b0385811680835285821660208085018281526001600160a01b038c81166000818152600285528981209851895494518916600160401b026001600160801b0319909516981697909717929092179096558a85526003825286852080546001600160a01b03191682179055808552600491829052938690208790556006549551631c3a2f8b60e11b81529081019390935260248301919091526044820152606481018490529116906338745f1690608401610a5d565b600082611bb58584611e16565b14949350505050565b610970828261174f565b600081604051602001611bdd91815260200190565b6040516020818303038152906040529050611c0e848473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84611876565b7ff0f2fe64297d6f5ba18daddd165143adda9d1be31e3172fbca589ee2e039f82b546000908152600160205260408082205490516001600160a01b03909116916108fc851502918591818181858888f19350505050158015610bd9573d6000803e3d6000fd5b60606000611c83836002612494565b611c8e9060026124b3565b6001600160401b03811115611ca557611ca56124c6565b6040519080825280601f01601f191660200182016040528015611ccf576020820181803683370190505b509050600360fc1b81600081518110611cea57611cea6124dc565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d1957611d196124dc565b60200101906001600160f81b031916908160001a9053506000611d3d846002612494565b611d489060016124b3565b90505b6001811115611dc0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d7c57611d7c6124dc565b1a60f81b828281518110611d9257611d926124dc565b60200101906001600160f81b031916908160001a90535060049490941c93611db9816124f2565b9050611d4b565b508315611e0f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610272565b9392505050565b600081815b8451811015611e82576000858281518110611e3857611e386124dc565b60200260200101519050808311611e5e5760008381526020829052604090209250611e6f565b600081815260208490526040902092505b5080611e7a81612509565b915050611e1b565b509392505050565b600060208284031215611e9c57600080fd5b81356001600160e01b031981168114611e0f57600080fd5b600060208284031215611ec657600080fd5b81358015158114611e0f57600080fd5b600060208284031215611ee857600080fd5b5035919050565b6001600160a01b0381168114611f0457600080fd5b50565b60008060408385031215611f1a57600080fd5b823591506020830135611f2c81611eef565b809150509250929050565b80356001600160401b0381168114611f4e57600080fd5b919050565b600080600060608486031215611f6857600080fd5b8335611f7381611eef565b9250611f8160208501611f37565b9150611f8f60408501611f37565b90509250925092565b600080600080600060808688031215611fb057600080fd5b8535611fbb81611eef565b9450602086013593506040860135611fd281611eef565b925060608601356001600160401b0380821115611fee57600080fd5b818801915088601f83011261200257600080fd5b81358181111561201157600080fd5b89602082850101111561202357600080fd5b9699959850939650602001949392505050565b60006020828403121561204857600080fd5b8135611e0f81611eef565b6000806000806080858703121561206957600080fd5b843561207481611eef565b935061208260208601611f37565b925061209060408601611f37565b9396929550929360600135925050565b6000806000604084860312156120b557600080fd5b83356001600160401b03808211156120cc57600080fd5b9085019060e082880312156120e057600080fd5b909350602085013590808211156120f657600080fd5b818601915086601f83011261210a57600080fd5b81358181111561211957600080fd5b8760208260051b850101111561212e57600080fd5b6020830194508093505050509250925092565b6000806040838503121561215457600080fd5b823561215f81611eef565b946020939093013593505050565b6000806040838503121561218057600080fd5b61218983611f37565b915061219760208401611f37565b90509250929050565b60208082526022908201527f526f6f74436861696e4d616e616765723a204272696467652069732070617573604082015261195960f21b606082015260800190565b6000602082840312156121f457600080fd5b611e0f82611f37565b6000808335601e1984360301811261221457600080fd5b8301803591506001600160401b0382111561222e57600080fd5b60200191503681900382131561224357600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160401b03808b168352808a16602084015288604084015260018060a01b038816606084015260e060808401526122b360e08401878961224a565b94811660a08401529290921660c090910152509695505050505050565b60208082526022908201527f526f6f74436861696e4d616e616765723a20544f4b454e5f4e4f545f4d415050604082015261115160f21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561080b5761080b612312565b60005b8381101561235657818101518382015260200161233e565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161239781601785016020880161233b565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123c881602884016020880161233b565b01602801949350505050565b600081518084526123ec81602086016020860161233b565b601f01601f19169290920160200192915050565b602081526000611e0f60208301846123d4565b6001600160a01b0386811682528581166020830152604082018590528316606082015260a06080820181905260009061244e908301846123d4565b979650505050505050565b6001600160a01b0386811682526020820186905284811660408301528316606082015260a06080820181905260009061244e908301846123d4565b60008160001904831182151516156124ae576124ae612312565b500290565b8082018082111561080b5761080b612312565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161250157612501612312565b506000190190565b60006001820161251b5761251b612312565b506001019056fea2646970667358221220ead73aeaa0919b85de48c575c0fda59d8b31b6bfef0bf9aedc96f54eeb8df1b564736f6c63430008100033";

type RootChainManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootChainManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootChainManager__factory extends ContractFactory {
  constructor(...args: RootChainManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RootChainManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RootChainManager> {
    return super.deploy(overrides || {}) as Promise<RootChainManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RootChainManager {
    return super.attach(address) as RootChainManager;
  }
  connect(signer: Signer): RootChainManager__factory {
    return super.connect(signer) as RootChainManager__factory;
  }
  static readonly contractName: "RootChainManager";
  public readonly contractName: "RootChainManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootChainManagerInterface {
    return new utils.Interface(_abi) as RootChainManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootChainManager {
    return new Contract(address, _abi, signerOrProvider) as RootChainManager;
  }
}
