/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RootChainManager,
  RootChainManagerInterface,
} from "../RootChainManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETHER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAPPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE_UPDATER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "childToRootToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "cleanMapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
    ],
    name: "depositEtherFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "hashChild",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "mapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previousMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "registerVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "remapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rootToChildToken",
    outputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "subindex",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDepositFee",
        type: "uint256",
      },
    ],
    name: "setDepositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStateSender",
        type: "address",
      },
    ],
    name: "setStateSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasurer",
        type: "address",
      },
    ],
    name: "setTreasurer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newWithdrawFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasurer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "typeToVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "ccdIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "ccdSubIndex",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "ccdTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "ccdEventIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "tokenId",
            type: "uint64",
          },
        ],
        internalType: "struct IRootChainManager.WithdrawParams",
        name: "withdrawParam",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506124a8806100206000396000f3fe6080604052600436106102295760003560e01c80636f3cde1f11610123578063cf1d21c0116100ab578063ea60c7c41161006f578063ea60c7c414610706578063f0471dc014610767578063f57663d114610787578063fda49eb41461079a578063ff57e1d8146107ba57600080fd5b8063cf1d21c01461065d578063d547741f14610685578063e2c49de1146106a5578063e43009a6146106c3578063e941fa78146106f057600080fd5b8063ab14248e116100f2578063ab14248e14610583578063b6ac642a146105d1578063c4d66de8146105f1578063c85d263114610611578063caf3791e1461064757600080fd5b80636f3cde1f1461050e5780637cb647591461052e57806391d148541461054e578063a217fddf1461056e57600080fd5b8063490ae210116101b15780635c975abb116101755780635c975abb1461046e578063607f2d4214610488578063671d6429146104b857806367a52793146104d85780636cb136b0146104ee57600080fd5b8063490ae210146103d257806349590657146103f257806352174ca914610407578063568b80b514610427578063594986a41461045b57600080fd5b8063286f8c74116101f8578063286f8c74146103285780632eb4a7ab146103485780632f2ff15d1461035e57806336568abe1461037e5780633e9e3e731461039e57600080fd5b806301ffc9a7146102825780630bbfae05146102b757806316c38b3c146102ca578063248a9ca3146102ea57600080fd5b3661027d5760405162461bcd60e51b815260206004820181905260248201527f45544820646972656374207472616e73666572206172652064697361626c656460448201526064015b60405180910390fd5b005b600080fd5b34801561028e57600080fd5b506102a261029d366004611e78565b6107da565b60405190151581526020015b60405180910390f35b61027b6102c5366004611ea2565b610811565b3480156102d657600080fd5b5061027b6102e5366004611f30565b610c88565b3480156102f657600080fd5b5061031a610305366004611f52565b6000908152600d602052604090206001015490565b6040519081526020016102ae565b34801561033457600080fd5b5061027b610343366004611f83565b610ca8565b34801561035457600080fd5b5061031a60075481565b34801561036a57600080fd5b5061027b610379366004611f83565b610d42565b34801561038a57600080fd5b5061027b610399366004611f83565b610d6d565b3480156103aa57600080fd5b5061031a7f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a77381565b3480156103de57600080fd5b5061027b6103ed366004611f52565b610deb565b3480156103fe57600080fd5b5060075461031a565b34801561041357600080fd5b5061027b610422366004611fcf565b610dfd565b34801561043357600080fd5b5061031a7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777781565b61027b610469366004612014565b610f0d565b34801561047a57600080fd5b50600c546102a29060ff1681565b34801561049457600080fd5b506102a26104a3366004611f52565b60056020526000908152604090205460ff1681565b3480156104c457600080fd5b5061027b6104d33660046120b2565b611057565b3480156104e457600080fd5b5061031a600a5481565b3480156104fa57600080fd5b5061027b6105093660046120b2565b6110ed565b34801561051a57600080fd5b5061027b6105293660046120cf565b611181565b34801561053a57600080fd5b5061027b610549366004611f52565b611260565b34801561055a57600080fd5b506102a2610569366004611f83565b6112ef565b34801561057a57600080fd5b5061031a600081565b34801561058f57600080fd5b506105b961059e366004611f52565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102ae565b3480156105dd57600080fd5b5061027b6105ec366004611f52565b61131a565b3480156105fd57600080fd5b5061027b61060c3660046120b2565b61132c565b34801561061d57600080fd5b506105b961062c366004611f52565b6001602052600090815260409020546001600160a01b031681565b34801561065357600080fd5b5061031a60085481565b34801561066957600080fd5b506105b973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561069157600080fd5b5061027b6106a0366004611f83565b61143f565b3480156106b157600080fd5b506006546001600160a01b03166105b9565b3480156106cf57600080fd5b5061031a6106de3660046120b2565b60046020526000908152604090205481565b3480156106fc57600080fd5b5061031a600b5481565b34801561071257600080fd5b506107476107213660046120b2565b6002602052600090815260409020546001600160401b0380821691600160401b90041682565b604080516001600160401b039384168152929091166020830152016102ae565b34801561077357600080fd5b5061027b6107823660046120cf565b611465565b61027b61079536600461211c565b6115dc565b3480156107a657600080fd5b506009546105b9906001600160a01b031681565b3480156107c657600080fd5b5061031a6107d5366004612148565b611694565b60006001600160e01b03198216637965db0b60e01b148061080b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600c5460ff16156108345760405162461bcd60e51b81526004016102729061217b565b600b543410156108905760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f75676820657468657220666f722077697468647261772066656044820152606560f81b6064820152608401610272565b600b54156108a3576108a3600b546116d9565b60006108b260208501856121bd565b6108c260408601602087016121bd565b60408601356108d760808801606089016120b2565b60808801356108ec60c08a0160a08b016121bd565b6108fc60e08b0160c08c016121bd565b60405160200161091297969594939291906121d8565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561099b5760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a20455849545f414c52454144595f506044820152671493d0d154d4d15160c21b6064820152608401610272565b6109dc838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506007549150849050611713565b80610a235750610a23838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506008549150849050611713565b610a805760405162461bcd60e51b815260206004820152602860248201527f5472616e73616374696f6e2070726f6f66206973206e6f74206c697665206f6e604482015267081b585a5b9b995d60c21b6064820152608401610272565b60008181526005602090815260408220805460ff19166001179055610abb90610aab908701876121bd565b6107d560408801602089016121bd565b6000818152600360205260409020549091506001600160a01b031680610af35760405162461bcd60e51b815260040161027290612220565b6001600160a01b03808216600090815260046020908152604080832054835260019091529020541680638468b27a610b3160808a0160608b016120b2565b84610b4260e08c0160c08d016121bd565b604080516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526001600160401b031660448301528a01356064820152608401600060405180830381600087803b158015610ba357600080fd5b505af1158015610bb7573d6000803e3d6000fd5b50506006546001600160a01b0316915063325f4a4a9050610bdb60208a018a6121bd565b610beb60408b0160208c016121bd565b60408b0135610c0060808d0160608e016120b2565b8c608001358d60a0016020810190610c1891906121bd565b8e60c0016020810190610c2b91906121bd565b6040518863ffffffff1660e01b8152600401610c4d97969594939291906121d8565b600060405180830381600087803b158015610c6757600080fd5b505af1158015610c7b573d6000803e3d6000fd5b5050505050505050505050565b6000610c948133611729565b50600c805460ff1916911515919091179055565b6000610cb48133611729565b6000838152600160205260409081902080546001600160a01b0319166001600160a01b038581169182179092556006549251633001397d60e01b8152600481018790526024810191909152911690633001397d90604401600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b50505050505050565b6000828152600d6020526040902060010154610d5e8133611729565b610d68838361178d565b505050565b6001600160a01b0381163314610ddd5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610272565b610de78282611813565b5050565b6000610df78133611729565b50600a55565b6000610e098133611729565b6000610e158484611694565b604080518082018252600080825260208083018281526001600160a01b038b8116808552600284528685209551865493516001600160401b03908116600160401b026001600160801b031990951691811691909117939093179095558684526003835285842080546001600160a01b03191690558484526004928390528584208490556006549551634b898fdf60e11b815292830194909452898116602483015288166044820152606481019190915292935016906397131fbe906084015b600060405180830381600087803b158015610eee57600080fd5b505af1158015610f02573d6000803e3d6000fd5b505050505050505050565b600c5460ff1615610f305760405162461bcd60e51b81526004016102729061217b565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03841601610fa95760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20494e56414c49445f524f4f545f5460448201526327a5a2a760e11b6064820152608401610272565b600a54341015610ffb5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206465706f736974206665656044820152606401610272565b600a541561100e5761100e600a546116d9565b61105085858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061187a92505050565b5050505050565b60006110638133611729565b6001600160a01b0382166110ca5760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a2076616c69642061646472657373206044820152671c995c5d5a5c995960c21b6064820152608401610272565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006110f98133611729565b6001600160a01b03821661115e5760405162461bcd60e51b815260206004820152602660248201527f526f6f74436861696e4d616e616765723a204241445f4e45575f53544154455f60448201526529a2a72222a960d11b6064820152608401610272565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c6077776111ac8133611729565b60006111b88585611694565b6001600160a01b0387166000908152600260205260409020549091506001600160401b03161580156111ff57506000818152600360205260409020546001600160a01b0316155b61124b5760405162461bcd60e51b815260206004820181905260248201527f526f6f74436861696e4d616e616765723a20414c52454144595f4d41505045446044820152606401610272565b6112588682878787611a70565b505050505050565b7f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a77361128b8133611729565b600780546008558290556006546040516338835bcb60e01b8152600481018490526001600160a01b03909116906338835bcb90602401600060405180830381600087803b1580156112db57600080fd5b505af1158015611258573d6000803e3d6000fd5b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006113268133611729565b50600b55565b600054610100900460ff166113475760005460ff161561134b565b303b155b6113ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610272565b600054610100900460ff161580156113d0576000805461ffff19166101011790555b6113db600083611bac565b6114057f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777783611bac565b600980546001600160a01b0319166001600160a01b038416179055600c805460ff191690558015610de7576000805461ff00191690555050565b6000828152600d602052604090206001015461145b8133611729565b610d688383611813565b60006114718133611729565b600061147d8585611694565b6001600160a01b03871660009081526002602090815260408083208151808301909252546001600160401b03808216808452600160401b90920416928201839052939450926114cb91611694565b6000848152600360209081526040808320546001600160a01b0316808452600290925290912054919250906001600160401b031615158061153357506001600160a01b038116600090815260026020526040902054600160401b90046001600160401b031615155b1561159557604080518082018252600080825260208083018281526001600160a01b0386168352600282528483209351845491516001600160401b03908116600160401b026001600160801b0319909316911617179092556004909152908120555b6000828152600360205260409020546001600160a01b0316156115cf57600082815260036020526040902080546001600160a01b03191690555b610f0289858a8a8a611a70565b600c5460ff16156115ff5760405162461bcd60e51b81526004016102729061217b565b600a5434116116695760405162461bcd60e51b815260206004820152603060248201527f4e6f7420656e6f75676820657468657220746f206465706f736974206166746560448201526f7220706179696e67207468652066656560801b6064820152608401610272565b600a541561167c5761167c600a546116d9565b610de78282600a543461168f9190612278565b611bb6565b6040516001600160c01b031960c084811b8216602084015283901b16602882015260009060300160405160208183030381529060405280519060200120905092915050565b6009546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610de7573d6000803e3d6000fd5b6000826117208584611c62565b14949350505050565b61173382826112ef565b610de75761174b816001600160a01b03166014611cd6565b611756836020611cd6565b6040516020016117679291906122af565b60408051601f198184030181529082905262461bcd60e51b825261027291600401612350565b61179782826112ef565b610de7576000828152600d602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117cf3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61181d82826112ef565b15610de7576000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166000908152600460209081526040808320546002909252909120546001600160401b0316158015906118b557508015155b6118d15760405162461bcd60e51b815260040161027290612220565b6000818152600160205260409020546001600160a01b0316806119425760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20494e56414c49445f544f4b454e5f6044820152635459504560e01b6064820152608401610272565b6001600160a01b0386166119985760405162461bcd60e51b815260206004820152601e60248201527f526f6f74436861696e4d616e616765723a20494e56414c49445f5553455200006044820152606401610272565b60405163c6aafd7560e01b81526001600160a01b0382169063c6aafd75906119cc9033908a908a908a908a90600401612363565b600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b5050600654604051631fe194a560e11b81526001600160a01b039091169250633fc3294a9150611a369089908990899087908a906004016123a9565b600060405180830381600087803b158015611a5057600080fd5b505af1158015611a64573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260409020546001600160a01b0316611ae75760405162461bcd60e51b815260206004820152602a60248201527f526f6f74436861696e4d616e616765723a20544f4b454e5f545950455f4e4f5460448201526917d4d5541413d495115160b21b6064820152608401610272565b6040805180820182526001600160401b0385811680835285821660208085018281526001600160a01b038c81166000818152600285528981209851895494518916600160401b026001600160801b0319909516981697909717929092179096558a85526003825286852080546001600160a01b03191682179055808552600491829052938690208790556006549551631c3a2f8b60e11b81529081019390935260248301919091526044820152606481018490529116906338745f1690608401610ed4565b610de7828261178d565b600081604051602001611bcb91815260200190565b6040516020818303038152906040529050611bfc848473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8461187a565b7ff0f2fe64297d6f5ba18daddd165143adda9d1be31e3172fbca589ee2e039f82b546000908152600160205260408082205490516001600160a01b03909116916108fc851502918591818181858888f19350505050158015611050573d6000803e3d6000fd5b600081815b8451811015611cce576000858281518110611c8457611c846123e4565b60200260200101519050808311611caa5760008381526020829052604090209250611cbb565b600081815260208490526040902092505b5080611cc6816123fa565b915050611c67565b509392505050565b60606000611ce5836002612413565b611cf0906002612432565b6001600160401b03811115611d0757611d07612445565b6040519080825280601f01601f191660200182016040528015611d31576020820181803683370190505b509050600360fc1b81600081518110611d4c57611d4c6123e4565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d7b57611d7b6123e4565b60200101906001600160f81b031916908160001a9053506000611d9f846002612413565b611daa906001612432565b90505b6001811115611e22576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611dde57611dde6123e4565b1a60f81b828281518110611df457611df46123e4565b60200101906001600160f81b031916908160001a90535060049490941c93611e1b8161245b565b9050611dad565b508315611e715760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610272565b9392505050565b600060208284031215611e8a57600080fd5b81356001600160e01b031981168114611e7157600080fd5b6000806000838503610100811215611eb957600080fd5b60e0811215611ec757600080fd5b5083925060e08401356001600160401b0380821115611ee557600080fd5b818601915086601f830112611ef957600080fd5b813581811115611f0857600080fd5b8760208260051b8501011115611f1d57600080fd5b6020830194508093505050509250925092565b600060208284031215611f4257600080fd5b81358015158114611e7157600080fd5b600060208284031215611f6457600080fd5b5035919050565b6001600160a01b0381168114611f8057600080fd5b50565b60008060408385031215611f9657600080fd5b823591506020830135611fa881611f6b565b809150509250929050565b80356001600160401b0381168114611fca57600080fd5b919050565b600080600060608486031215611fe457600080fd5b8335611fef81611f6b565b9250611ffd60208501611fb3565b915061200b60408501611fb3565b90509250925092565b60008060008060006080868803121561202c57600080fd5b853561203781611f6b565b945060208601359350604086013561204e81611f6b565b925060608601356001600160401b038082111561206a57600080fd5b818801915088601f83011261207e57600080fd5b81358181111561208d57600080fd5b89602082850101111561209f57600080fd5b9699959850939650602001949392505050565b6000602082840312156120c457600080fd5b8135611e7181611f6b565b600080600080608085870312156120e557600080fd5b84356120f081611f6b565b93506120fe60208601611fb3565b925061210c60408601611fb3565b9396929550929360600135925050565b6000806040838503121561212f57600080fd5b823561213a81611f6b565b946020939093013593505050565b6000806040838503121561215b57600080fd5b61216483611fb3565b915061217260208401611fb3565b90509250929050565b60208082526022908201527f526f6f74436861696e4d616e616765723a204272696467652069732070617573604082015261195960f21b606082015260800190565b6000602082840312156121cf57600080fd5b611e7182611fb3565b6001600160401b039788168152958716602087015260408601949094526001600160a01b039290921660608501526080840152831660a083015290911660c082015260e00190565b60208082526022908201527f526f6f74436861696e4d616e616765723a20544f4b454e5f4e4f545f4d415050604082015261115160f21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561080b5761080b612262565b60005b838110156122a657818101518382015260200161228e565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516122e781601785016020880161228b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161231881602884016020880161228b565b01602801949350505050565b6000815180845261233c81602086016020860161228b565b601f01601f19169290920160200192915050565b602081526000611e716020830184612324565b6001600160a01b0386811682528581166020830152604082018590528316606082015260a06080820181905260009061239e90830184612324565b979650505050505050565b6001600160a01b0386811682526020820186905284811660408301528316606082015260a06080820181905260009061239e90830184612324565b634e487b7160e01b600052603260045260246000fd5b60006001820161240c5761240c612262565b5060010190565b600081600019048311821515161561242d5761242d612262565b500290565b8082018082111561080b5761080b612262565b634e487b7160e01b600052604160045260246000fd5b60008161246a5761246a612262565b50600019019056fea2646970667358221220fc6cb6b0a8368e2010b533676f35bd7ddf61fb95d8f99b49d3c0d79925433e7e64736f6c63430008100033";

type RootChainManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootChainManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootChainManager__factory extends ContractFactory {
  constructor(...args: RootChainManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RootChainManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RootChainManager> {
    return super.deploy(overrides || {}) as Promise<RootChainManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RootChainManager {
    return super.attach(address) as RootChainManager;
  }
  connect(signer: Signer): RootChainManager__factory {
    return super.connect(signer) as RootChainManager__factory;
  }
  static readonly contractName: "RootChainManager";
  public readonly contractName: "RootChainManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootChainManagerInterface {
    return new utils.Interface(_abi) as RootChainManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootChainManager {
    return new Contract(address, _abi, signerOrProvider) as RootChainManager;
  }
}
