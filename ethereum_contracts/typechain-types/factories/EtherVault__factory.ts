/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EtherVault, EtherVaultInterface } from "../EtherVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "exitor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ExitedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositCcdReceiver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LockedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_TYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "userWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exitTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "depositReceiver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "depositCcdReceiver",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bfb806100206000396000f3fe6080604052600436106100ab5760003560e01c806391d148541161006457806391d14854146101d8578063a217fddf146101f8578063c4d66de81461020d578063c6aafd751461022d578063d547741f1461024d578063ec87621c1461026d57600080fd5b806301ffc9a7146100d0578063248a9ca3146101055780632f2ff15d1461014457806336568abe14610164578063609c92b8146101845780638468b27a146101b857600080fd5b366100cb57600080516020610ba68339815191526100c9813361028f565b005b600080fd5b3480156100dc57600080fd5b506100f06100eb3660046108ad565b610300565b60405190151581526020015b60405180910390f35b34801561011157600080fd5b506101366101203660046108d7565b6000908152600160208190526040909120015490565b6040519081526020016100fc565b34801561015057600080fd5b506100c961015f366004610908565b610337565b34801561017057600080fd5b506100c961017f366004610908565b610363565b34801561019057600080fd5b506101367fa234e09165f88967a714e2a476288e4c6d88b4b69fe7c300a03190b858990bfc81565b3480156101c457600080fd5b506100c96101d3366004610938565b6103dd565b3480156101e457600080fd5b506100f06101f3366004610908565b610477565b34801561020457600080fd5b50610136600081565b34801561021957600080fd5b506100c961022836600461097e565b6104a2565b34801561023957600080fd5b506100c961024836600461099b565b61057e565b34801561025957600080fd5b506100c9610268366004610908565b610607565b34801561027957600080fd5b50610136600080516020610ba683398151915281565b6102998282610477565b6102fc576102b1816001600160a01b0316601461062e565b6102bc83602061062e565b6040516020016102cd929190610a72565b60408051601f198184030181529082905262461bcd60e51b82526102f391600401610ae7565b60405180910390fd5b5050565b60006001600160e01b03198216637965db0b60e01b148061033157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526001602081905260409091200154610354813361028f565b61035e83836107d1565b505050565b6001600160a01b03811633146103d35760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016102f3565b6102fc828261083c565b600080516020610ba68339815191526103f6813361028f565b6040516001600160a01b0386169083156108fc029084906000818181858888f1935050505015801561042c573d6000803e3d6000fd5b50846001600160a01b03167f0fc0eed41f72d3da77d0f53b9594fc7073acd15ee9d7c536819a70a67c57ef3c8360405161046891815260200190565b60405180910390a25050505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff166104bd5760005460ff16156104c1565b303b155b6105245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102f3565b600054610100900460ff16158015610546576000805461ffff19166101011790555b6105516000836108a3565b610569600080516020610ba6833981519152836108a3565b80156102fc576000805461ff00191690555050565b600080516020610ba6833981519152610597813361028f565b60006105a5838501856108d7565b9050866001600160a01b0316886001600160a01b03167f348a292983b78fd48d69f1184950f831d3baa5621a5f29985ffe489c379f9c8388846040516105f5929190918252602082015260400190565b60405180910390a35050505050505050565b60008281526001602081905260409091200154610624813361028f565b61035e838361083c565b6060600061063d836002610b30565b610648906002610b4f565b67ffffffffffffffff81111561066057610660610b62565b6040519080825280601f01601f19166020018201604052801561068a576020820181803683370190505b509050600360fc1b816000815181106106a5576106a5610b78565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106d4576106d4610b78565b60200101906001600160f81b031916908160001a90535060006106f8846002610b30565b610703906001610b4f565b90505b600181111561077b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061073757610737610b78565b1a60f81b82828151811061074d5761074d610b78565b60200101906001600160f81b031916908160001a90535060049490941c9361077481610b8e565b9050610706565b5083156107ca5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102f3565b9392505050565b6107db8282610477565b6102fc5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6108468282610477565b156102fc5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6102fc82826107d1565b6000602082840312156108bf57600080fd5b81356001600160e01b0319811681146107ca57600080fd5b6000602082840312156108e957600080fd5b5035919050565b6001600160a01b038116811461090557600080fd5b50565b6000806040838503121561091b57600080fd5b82359150602083013561092d816108f0565b809150509250929050565b6000806000806080858703121561094e57600080fd5b8435610959816108f0565b93506020850135610969816108f0565b93969395505050506040820135916060013590565b60006020828403121561099057600080fd5b81356107ca816108f0565b60008060008060008060a087890312156109b457600080fd5b86356109bf816108f0565b955060208701356109cf816108f0565b94506040870135935060608701356109e6816108f0565b9250608087013567ffffffffffffffff80821115610a0357600080fd5b818901915089601f830112610a1757600080fd5b813581811115610a2657600080fd5b8a6020828501011115610a3857600080fd5b6020830194508093505050509295509295509295565b60005b83811015610a69578181015183820152602001610a51565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610aaa816017850160208801610a4e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610adb816028840160208801610a4e565b01602801949350505050565b6020815260008251806020840152610b06816040850160208701610a4e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b4a57610b4a610b1a565b500290565b8082018082111561033157610331610b1a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610b9d57610b9d610b1a565b50600019019056fe241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08a2646970667358221220c178640aec5297aed40c39b35d5d9ff737a2f8f4a66077b22cb543694d6b87b764736f6c63430008100033";

type EtherVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherVault__factory extends ContractFactory {
  constructor(...args: EtherVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EtherVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EtherVault> {
    return super.deploy(overrides || {}) as Promise<EtherVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EtherVault {
    return super.attach(address) as EtherVault;
  }
  connect(signer: Signer): EtherVault__factory {
    return super.connect(signer) as EtherVault__factory;
  }
  static readonly contractName: "EtherVault";
  public readonly contractName: "EtherVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherVaultInterface {
    return new utils.Interface(_abi) as EtherVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherVault {
    return new Contract(address, _abi, signerOrProvider) as EtherVault;
  }
}
